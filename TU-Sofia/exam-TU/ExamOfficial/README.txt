Задача: Да се създаде сървър, който служи като помощно средство на програмисти при работа с реryлярни изрази. 
Сървърът позволява тестване на създаден от потребитепя регулярен израз и съхранява вече създадени такива във файл.

1) Създайте клас Regex със следните полета [5 точки]:
• id — цяло число, идентификатор на реryлярния израз;
• pattern — символен низ, шаблона на израза;
• description — символен низ, описва с кпючови думи за какво служи дадения реryлярен израз (например email);
• rating — цяло число потребителска оценка за качеството на израза;
• Regex да съдържа и статично поле int nextld c първоначална стойност 0.

2) Създайте конструктор, който инициализира полетата pattern u description чрез параметри, полето rating — c 0 u 
полето id със следващата цепочислена стойност на nextld [5 точки].

3) Сървърът трябва да може да запазва гореописаните реryлярни изрази. Създайте функционапности за четене и запис на списък, 
съдържащ обекти от тип Regex въе файл. Да не се допуска добавяне на Regex, чийто pattern вече съществува във файла [10 точки].

4) Създайте клас RegexTester, в който напишете статичен метод List<Воо1еоп> test(Regex regex, String[] strings). 
Методът трябва да проверява низовете от масива strings спрямо подадения реryлярен израз regex. 
Ако низът отговаря на шаблона, резултатът e true. Методът връща списък с булеви стойности — резуптатите от всички проверки [10 точки].
При свързване към сървъра клиентите имат 2 опции за работа — създаване на собствен регулярен израз или тьрсене на такъв във файла.

5) При създаване на собствен Regex кпиентът попълва полетата за шаблон и описание. След това въвежда низове за тестване разделени с нов ред. 
Сървърът провежда тестването на реryпярния израз чрез RegexTester и изпраща резултата на клиента. 
Клиентът избира, дали иска да добави своя реryлярен израз към файла [10 точки].

6) Ако клиентът избере опция за търсене на съществуващ израз, той въвежда ключова дума. 
Сървърът филтрира списъка от файла и връща на клиента списък c Regex, чиито описания съдържат кпючовата дума (description). 
Списъкът е подреден по полето rating в низходящ ред. Клиентьт избира Regex от списъка като въведе неговото id. 
След това въвежда низове за тестване. Тестването се провежда по аналогичен начин. 
Клиентьт има опцията да промени rating на реryлярния израз с плюс ипи минус едно [10 точки].

7) Сървърът трябва да може да обслужва едновременно няколко клиентски програми [10 точки] .

8) При работа със споделени ресурси да се осиryри необходимата синхронизация [10 точки]. 

НЕ пишете get/set методи. Приемете, че те вече са написани и може да ги използвате. 

НЕ пишете код на клиентската програма. Реализирайте единствено сървъра.

Оценяване: 0-60 точки — Слаб 2, 61-71 точки — Среден 3, 71-81 точки — Добър 4, 81-91 точки — Мн. Добър 5, 
91-100 точки — Отличен 6
